import React, { useState } from 'react';
import { 
  Card, 
  CardContent, 
  CardHeader, 
  CardTitle 
} from '@/components/ui/card';
import { 
  Tabs, 
  TabsContent, 
  TabsList, 
  TabsTrigger 
} from '@/components/ui/tabs';
import { Calendar, Clock, Activity, AlertCircle } from 'lucide-react';

// Sample exercise data with images and detailed instructions
const exerciseCategories = [
  {
    id: 1,
    name: 'تمارين العمود الفقري',
    exercises: [
      {
        id: 1,
        name: 'تمديد العمود الفقري',
        duration: '10 دقائق',
        difficulty: 'متوسط',
        sets: '3 مجموعات',
        reps: '10 تكرارات',
        description: 'استلقِ على ظهرك مع ثني ركبتيك. اسحب ركبتيك برفق نحو صدرك باستخدام يديك حتى تشعر بتمدد خفيف في أسفل الظهر.',
        instructions: [
          'استلقِ على ظهرك على سطح مستوٍ',
          'اثنِ ركبتيك وضع قدميك على الأرض',
          'اسحب ركبتيك نحو صدرك ببطء',
          'حافظ على الوضع لمدة 15-30 ثانية',
          'كرر التمرين 3 مرات'
        ],
        imagePlaceholder: '/api/placeholder/400/300'
      },
      {
        id: 2,
        name: 'تمارين تقوية عضلات الظهر',
        duration: '15 دقائق',
        difficulty: 'سهل',
        sets: '3 مجموعات',
        reps: '12 تكرار',
        description: 'قف مع ثني ركبتيك قليلاً. قم بثني جذعك للأمام مع الحفاظ على استقامة ظهرك.',
        instructions: [
          'قف مع مباعدة قدميك بعرض الكتفين',
          'اثنِ ركبتيك قليلاً',
          'انحنِ للأمام مع الحفاظ على استقامة ظهرك',
          'ارجع ببطء إلى وضع البداية',
          'كرر التمرين 12 مرة'
        ],
        imagePlaceholder: '/api/placeholder/400/300'
      }
    ]
  },
  {
    id: 2,
    name: 'تمارين الركبة',
    exercises: [
      {
        id: 3,
        name: 'تقوية عضلات الفخذ',
        duration: '12 دقائق',
        difficulty: 'صعب',
        sets: '4 مجموعات',
        reps: '15 تكرار',
        description: 'قف مستقيماً مع وضع يديك على الحائط للدعم. ارفع ساقك جانباً مع الحفاظ على استقامتها.',
        instructions: [
          'قف بجانب حائط واستخدمه للدعم',
          'ارفع ساقك جانباً ببطء',
          'حافظ على استقامة الساق',
          'اخفض ساقك ببطء',
          'كرر مع الساق الأخرى'
        ],
        imagePlaceholder: '/api/placeholder/400/300'
      }
    ]
  }
];

const ExerciseDetailCard = ({ exercise }) => (
  <Card className="w-full">
    <CardContent className="p-6">
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <img 
            src={exercise.imagePlaceholder} 
            alt={exercise.name}
            className="w-full rounded-lg shadow-md"
          />
        </div>
        <div className="space-y-4">
          <h3 className="text-xl font-bold">{exercise.name}</h3>
          
          <div className="flex flex-wrap gap-4">
            <div className="flex items-center gap-2">
              <Clock className="w-4 h-4 text-blue-500" />
              <span>{exercise.duration}</span>
            </div>
            <div className="flex items-center gap-2">
              <Activity className="w-4 h-4 text-green-500" />
              <span>{exercise.difficulty}</span>
            </div>
          </div>

          <div>
            <h4 className="font-semibold mb-2">المجموعات والتكرارات:</h4>
            <p>{exercise.sets} × {exercise.reps}</p>
          </div>

          <div>
            <h4 className="font-semibold mb-2">الوصف:</h4>
            <p className="text-gray-700">{exercise.description}</p>
          </div>

          <div>
            <h4 className="font-semibold mb-2">خطوات التمرين:</h4>
            <ol className="list-decimal list-inside space-y-1">
              {exercise.instructions.map((instruction, index) => (
                <li key={index} className="text-gray-700">{instruction}</li>
              ))}
            </ol>
          </div>
        </div>
      </div>
    </CardContent>
  </Card>
);

const PatientExerciseManager = () => {
  const [selectedExercises, setSelectedExercises] = useState([]);
  const [activePatient, setActivePatient] = useState({
    id: 1,
    name: 'أحمد محمد',
    age: 45,
    condition: 'آلام أسفل الظهر'
  });

  const handleExerciseToggle = (exercise) => {
    setSelectedExercises(prev => {
      const exists = prev.find(ex => ex.id === exercise.id);
      if (exists) {
        return prev.filter(ex => ex.id !== exercise.id);
      }
      return [...prev, exercise];
    });
  };

  const handleSendExercises = () => {
    // This would typically make an API call to send the exercises
    console.log('Sending exercises to patient:', selectedExercises);
    alert('تم إرسال التمارين للمريض بنجاح');
  };

  return (
    <div className="w-full max-w-7xl mx-auto p-4 bg-gray-50 min-h-screen" dir="rtl">
      {/* Header */}
      <div className="mb-6">
        <h1 className="text-2xl font-bold text-gray-800 mb-2">إدارة تمارين المريض</h1>
        <div className="flex items-center gap-2 text-gray-600">
          <Calendar className="w-5 h-5" />
          <span>الثلاثاء، 12 نوفمبر 2024</span>
        </div>
      </div>

      <div className="grid grid-cols-1 gap-6">
        {/* Patient Info Card */}
        <Card>
          <CardHeader>
            <CardTitle className="text-lg">معلومات المريض</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div>
                <label className="text-sm text-gray-500">الاسم</label>
                <p className="font-medium">{activePatient.name}</p>
              </div>
              <div>
                <label className="text-sm text-gray-500">العمر</label>
                <p className="font-medium">{activePatient.age} سنة</p>
              </div>
              <div>
                <label className="text-sm text-gray-500">الحالة</label>
                <p className="font-medium">{activePatient.condition}</p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Exercise Selection */}
        <Card>
          <CardHeader>
            <CardTitle className="text-lg">اختيار التمارين</CardTitle>
          </CardHeader>
          <CardContent>
            <Tabs defaultValue={exerciseCategories[0].id.toString()} className="w-full">
              <TabsList className="w-full justify-start mb-4">
                {exerciseCategories.map(category => (
                  <TabsTrigger 
                    key={category.id} 
                    value={category.id.toString()}
                    className="px-4 py-2"
                  >
                    {category.name}
                  </TabsTrigger>
                ))}
              </TabsList>

              {exerciseCategories.map(category => (
                <TabsContent key={category.id} value={category.id.toString()}>
                  <div className="grid grid-cols-1 gap-6">
                    {category.exercises.map(exercise => (
                      <div key={exercise.id}>
                        <div 
                          className={`mb-4 p-4 rounded-lg border cursor-pointer transition-colors ${
                            selectedExercises.find(ex => ex.id === exercise.id)
                              ? 'bg-blue-50 border-blue-500'
                              : 'bg-white hover:bg-gray-50'
                          }`}
                          onClick={() => handleExerciseToggle(exercise)}
                        >
                          <div className="flex items-center justify-between">
                            <h3 className="font-medium">{exercise.name}</h3>
                            <button 
                              className={`px-4 py-2 rounded-lg transition-colors ${
                                selectedExercises.find(ex => ex.id === exercise.id)
                                  ? 'bg-blue-500 text-white'
                                  : 'bg-gray-100 text-gray-700'
                              }`}
                            >
                              {selectedExercises.find(ex => ex.id === exercise.id) 
                                ? 'تم الاختيار' 
                                : 'اختيار التمرين'}
                            </button>
                          </div>
                        </div>
                        <ExerciseDetailCard exercise={exercise} />
                      </div>
                    ))}
                  </div>
                </TabsContent>
              ))}
            </Tabs>
          </CardContent>
        </Card>

        {/* Selected Exercises Summary */}
        {selectedExercises.length > 0 && (
          <Card>
            <CardHeader>
              <CardTitle className="text-lg">ملخص التمارين المختارة ({selectedExercises.length})</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {selectedExercises.map(exercise => (
                  <div key={exercise.id} className="flex items-center justify-between p-4 bg-white rounded-lg border">
                    <div className="flex items-center gap-4">
                      <img 
                        src={exercise.imagePlaceholder} 
                        alt={exercise.name}
                        className="w-20 h-20 rounded-lg object-cover"
                      />
                      <div>
                        <h3 className="font-medium">{exercise.name}</h3>
                        <p className="text-sm text-gray-600">{exercise.sets} × {exercise.reps}</p>
                      </div>
                    </div>
                    <button
                      onClick={() => handleExerciseToggle(exercise)}
                      className="text-red-500 hover:text-red-700"
                    >
                      إزالة
                    </button>
                  </div>
                ))}

                <div className="flex justify-end gap-4 mt-6">
                  <button 
                    className="px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors"
                    onClick={() => setSelectedExercises([])}
                  >
                    إعادة ضبط
                  </button>
                  <button 
                    className="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
                    onClick={handleSendExercises}
                  >
                    إرسال التمارين للمريض
                  </button>
                </div>
              </div>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
};

export default PatientExerciseManager;